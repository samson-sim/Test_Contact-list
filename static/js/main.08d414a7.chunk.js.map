{"version":3,"sources":["components/ContactInfo/ContactInfo.tsx","store/index.ts","api/api.ts","components/ContactForm/ContactForm.tsx","components/ContactsTable/ContactsTable.tsx","components/ContactsPage/ContactsPage.tsx","App.tsx","index.tsx"],"names":["ContactInfo","contactId","match","params","id","useState","prevValue","setPrevValue","newField","setNewField","isFieldValid","setIsFieldValid","selectedKey","setSelectedKey","query","setQuery","contacts","useSelector","state","find","contact","selectedContact","setSelectedContact","keys","Object","className","to","type","onClick","prev","accept","confirm","addPrevValue","map","key","value","placeholder","onChange","target","disabled","length","changeField","deleteField","includes","field","split","trim","style","color","CREATE_CONTACT","REMOVE_CONTACT","ADD_FIELD","defaultState","name","username","email","phone","store","createStore","action","filter","ContactForm","dispatch","useDispatch","setName","setEmail","setPhone","addContact","newContact","alert","onSubmit","event","preventDefault","ContactsTable","removeContact","PeoplePage","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08d414a7.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\n/* eslint-disable default-case */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { State } from '../../store';\nimport './ContactInfo.scss';\n\nexport const ContactInfo = ({ match }: any) => {\n  const contactId = +match.params.id;\n  const [prevValue, setPrevValue] = useState<string[]>(['', '']);\n  const [newField, setNewField] = useState('');\n  const [isFieldValid, setIsFieldValid] = useState(true);\n  const [selectedKey, setSelectedKey] = useState('');\n  const [query, setQuery] = useState('');\n  const contacts = useSelector((state: State) => state.contacts);\n  const [selectedContact, setSelectedContact] = useState(\n    contacts.find(contact => contact.id === contactId),\n  );\n\n  const addField = () => {\n    if (newField.includes(':')) {\n      const field: any = {\n        key: newField.split(':')[0],\n        value: newField.split(':')[1],\n      };\n\n      if (field.key.trim().length > 0 && field.value.trim().length > 0) {\n        setSelectedContact({ ...selectedContact, [field.key]: field.value });\n        setNewField('');\n      } else {\n        setIsFieldValid(false);\n      }\n    } else {\n      setIsFieldValid(false);\n    }\n  };\n\n  const deleteField = (key: string) => {\n    setPrevValue([key, selectedContact[key]]);\n    // eslint-disable-next-line no-restricted-globals\n    const accept = confirm('Вы точно хотите это сделать?');\n\n    if (accept) {\n      delete selectedContact[key];\n      setSelectedContact({ ...selectedContact });\n    }\n  };\n\n  const changeField = (key: string) => {\n    setPrevValue([key, selectedContact[key]]);\n    // eslint-disable-next-line no-restricted-globals\n    const accept = confirm('Вы точно хотите это сделать?');\n\n    if (accept) {\n      setSelectedContact({ ...selectedContact, [key]: query });\n    }\n\n    setQuery('');\n  };\n\n  const addPrevValue = (prev: string[]) => {\n    // eslint-disable-next-line no-restricted-globals\n    const accept = confirm('Вы действительно хотите вернуться?');\n\n    if (prev[0] !== '' && accept) {\n      setSelectedContact({ ...selectedContact, [prev[0]]: prev[1] });\n    }\n  };\n\n  const keys = Object.keys(selectedContact);\n\n  return (\n    <div>\n      <h1>Contact Info</h1>\n      <Link className=\"contact__link\" to=\"/\">Back to contacts list</Link>\n      <button\n        className=\"contact__back\"\n        type=\"button\"\n        onClick={() => addPrevValue(prevValue)}\n      >\n        Back\n      </button>\n      {selectedContact && (\n        <div className=\"contact__info\">\n          {keys.map((key: any) => (\n            <div key={key} className=\"contact__fields\">\n              <div className=\"contact__field\">{key}</div>\n              <input\n                className=\"contact__info\"\n                value={selectedContact[key]}\n                onClick={() => setSelectedKey(key)}\n              />\n              {key === selectedKey\n              && (\n                <>\n                  <input\n                    className=\"contact__info\"\n                    placeholder={`Введите новый ${key}`}\n                    value={query}\n                    onChange={({ target }) => {\n                      setQuery(target.value);\n                    }}\n                  />\n                  <button\n                    className=\"contact__change\"\n                    disabled={query.length === 0}\n                    type=\"button\"\n                    onClick={() => changeField(key)}\n                  >\n                    change\n                  </button>\n                  <button\n                    className=\"contact__delete-key\"\n                    type=\"button\"\n                    onClick={() => deleteField(key)}\n                  >\n                    delete\n                  </button>\n                </>\n              )}\n            </div>\n          ))}\n          <div className=\"contact__create-field\">\n            <h2>Create new field</h2>\n            <input\n              className=\"contact__create\"\n              type=\"text\"\n              value={newField}\n              placeholder=\"New Field\"\n              onChange={({ target }) => {\n                setNewField(target.value);\n                setIsFieldValid(true);\n              }}\n            />\n            <button\n              className=\"contact__create-button\"\n              type=\"button\"\n              onClick={addField}\n            >\n              Add new field\n            </button>\n            {!isFieldValid && <p style={{ color: 'red' }}>Введите поле в виде key:value</p>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { createStore } from 'redux';\nimport { contactsApi } from '../api/api';\n\nexport type State = {\n  contacts: any[],\n};\n\nconst CREATE_CONTACT = 'CREATE_CONTACT';\nconst REMOVE_CONTACT = 'REMOVE_CONTACT';\nconst ADD_FIELD = 'ADD_FIELD';\n\nconst defaultState: State = {\n  contacts: [...contactsApi],\n};\n\nconst reducer = (state = defaultState, action: any): State => {\n  switch (action.type) {\n    case CREATE_CONTACT:\n      return { ...state, contacts: [...state.contacts, action.value] };\n\n    case REMOVE_CONTACT:\n      return { ...state, contacts: state.contacts.filter(contact => contact.id !== action.value) };\n\n    case ADD_FIELD:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => {\n          const { id, key, value } = action;\n\n          if (contact.id === id) {\n            return { ...contact, [key]: value };\n          }\n\n          return contact;\n        }),\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport const removeContactAction = (value: number) => ({ type: REMOVE_CONTACT, value });\nexport const createContactAction = (value: any) => ({ type: CREATE_CONTACT, value });\nexport const createFieldAction = (value: any) => ({ type: CREATE_CONTACT, value });\n\nexport const store = createStore(reducer);\n","export const contactsApi: any[] = [{\n  id: 1,\n  name: 'Alla Malvina',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  phone: '1-463-123-4447',\n},\n{\n  id: 2,\n  name: 'Samson Sim',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  phone: '1-463-123-4447',\n},\n{\n  id: 3,\n  name: 'Sasha Bauch',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  phone: '1-463-123-4447',\n},\n{\n  id: 4,\n  name: 'Clementine Bauch',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  phone: '1-463-123-4447',\n},\n{\n  id: 5,\n  name: 'Igor Loger',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  phone: '1-463-123-4447',\n}];\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContactAction, State } from '../../store';\nimport './ContactForm.scss';\n\nexport const ContactForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state: State) => state.contacts);\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const addContact = () => {\n    const newContact: any = {\n      id: contacts.length + 1,\n      name,\n      email,\n      phone,\n    };\n\n    if (newContact.name.trim() === '') {\n      alert('Invalid Name');\n    } else {\n      dispatch(createContactAction(newContact));\n    }\n  };\n\n  const createContact = (event: React.FormEvent) => {\n    event.preventDefault();\n    addContact();\n  };\n\n  return (\n    <form className=\"contact__form\" onSubmit={createContact}>\n      <input\n        className=\"contact__input\"\n        type=\"text\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={({ target }) => setName(target.value)}\n      />\n      <input\n        className=\"contact__input\"\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={({ target }) => setEmail(target.value)}\n      />\n      <input\n        className=\"contact__input\"\n        type=\"tel\"\n        placeholder=\"Phone\"\n        value={phone}\n        onChange={({ target }) => setPhone(target.value)}\n      />\n      <button className=\"contact__button\" type=\"submit\">Create contact</button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeContactAction, State } from '../../store';\nimport './ContactsTable.scss';\n\nexport const ContactsTable: React.FC = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state: State) => state.contacts);\n\n  const removeContact = (id: number) => {\n    // eslint-disable-next-line no-restricted-globals\n    const accept = confirm('Вы действительно хотите удалить контакт?');\n\n    if (accept) {\n      dispatch(removeContactAction(id));\n    }\n  };\n\n  return (\n    <ul className=\"contact__list\">\n      {contacts.map(contact => (\n        <li key={contact.id} className=\"contact__item\">\n          {contact.name}\n          <div className=\"contact__buttons\">\n            <Link to={`/${contact.id}`} className=\"contact__link\">\n              Contact info\n            </Link>\n            <button\n              className=\"contact__delete\"\n              type=\"button\"\n              onClick={() => removeContact(contact.id)}\n            >\n              Delete contact\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactsTable } from '../ContactsTable/ContactsTable';\nimport './ContactsPage.scss';\n\nexport const PeoplePage = () => {\n  const contacts = useSelector((state: State) => state.contacts);\n\n  return (\n    <div className=\"contacts__page\">\n      <h1 className=\"contacts__title\">\n        Contacts Page\n      </h1>\n      <div className=\"contacts__sector\">\n        {contacts.length > 0 && <ContactsTable />}\n        <ContactForm />\n      </div>\n    </div>\n  );\n};\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { ContactInfo } from './components/ContactInfo/ContactInfo';\nimport { PeoplePage } from './components/ContactsPage/ContactsPage';\n\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact>\n          <PeoplePage />\n        </Route>\n        <Route path=\"/:id\" component={ContactInfo} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}